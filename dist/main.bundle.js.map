{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/config.ts","./src/app/services/wimrepo.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"wim-nav\\\">\\r\\n    <div class=\\\"container\\\" style=\\\"width: 100%;\\\">\\r\\n        <button class=\\\"mobile-nav-toggle\\\" (click)=\\\"toggleSidebar()\\\"></button>\\r\\n        <a href=\\\"https://wim.usgs.gov\\\" class=\\\"nav-branding\\\">\\r\\n            <img src=\\\"https://wim.usgs.gov/visuals/branding/wimvector.png\\\" />\\r\\n        </a>\\r\\n        <span class=\\\"nav-title\\\">\\r\\n            Web Informatics and Mapping Repository Dashboard\\r\\n        </span>\\r\\n        <div class=\\\"nav-links\\\">\\r\\n            <a (click)=\\\"logout()\\\" *ngIf=\\\"isLoggedIn\\\">\\r\\n                <span>\\r\\n                    <span class=\\\"nav-link-text\\\">Logout</span>\\r\\n                </span>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n<div class=\\\"loginContainer\\\">\\r\\n\\t<div *ngIf=\\\"!isLoggedIn\\\" class=\\\"login\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"errorMessage\\\" id=\\\"errorMessage\\\">Username or Password is incorrect.</div>\\r\\n\\t\\t\\t<label>Username:</label><input id=\\\"userInput\\\" placeholder=\\\"Username\\\"><br>\\r\\n\\t\\t\\t<label>Github Token:</label><input type=\\\"password\\\" id=\\\"passInput\\\" placeholder=\\\"Password\\\"><br>\\r\\n\\t\\t\\t<button (click)=\\\"login()\\\">Log In</button>\\r\\n\\t</div>\\r\\n</div>\\r\\n<mat-accordion *ngIf=\\\"isLoggedIn\\\">\\r\\n\\r\\n\\t<mat-expansion-panel id=\\\"repoAccordion\\\">\\r\\n\\t\\t<mat-expansion-panel-header>\\r\\n\\t\\t\\t<mat-panel-title>Repos with Code.json file</mat-panel-title>\\r\\n\\t\\t\\t<mat-panel-description>\\r\\n\\t\\t\\t\\tCount: {{countWithCode}}\\r\\n\\t\\t\\t</mat-panel-description>\\r\\n\\t\\t</mat-expansion-panel-header>\\r\\n\\t\\t<!-- filter -->\\r\\n\\t\\t<div class=\\\"example-header\\\">\\r\\n\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t<input class=\\\"filter\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- Table of Repos with Code.json file-->\\r\\n\\t\\t<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\t\\t\\t<mat-table #withCodeTable=\\\"matSort\\\" [dataSource]=\\\"dataSourceWithCode\\\" matSort>\\r\\n\\r\\n\\t\\t\\t\\t<!-- repo name -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"name\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Repo Name</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\"> {{repo.name}} </mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- date repo created -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"created_at\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Created Date</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\"> {{repo.created_at | date: 'MM/dd/yyyy'}} </mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- description -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"description\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\"> {{repo.description}} </mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- homepage url -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"liveurl\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>URL</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a [href]=\\\"repo.liveurl\\\" target=\\\"_blank\\\">{{repo.liveurl}}</a>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- contact person -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"contact\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Contact</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\"> {{repo.contact}} </mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- status -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"status\\\">\\r\\n\\t\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\\r\\n\\t\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let repo\\\"> {{repo.status}} </mat-cell>\\r\\n\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<!-- languages -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"languages\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef>Languages</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let repo\\\"> \\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *ngFor=\\\"let lang of repo.languages\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{lang}}<br>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- tags -->\\r\\n\\t\\t\\t\\t<ng-container matColumnDef=\\\"tags\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef>Tags</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let repo\\\"> \\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *ngFor=\\\"let tag of repo.tags\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{tag}}<br>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n\\t\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumnsWith\\\"></mat-header-row>\\r\\n\\t\\t\\t\\t<mat-row *matRowDef=\\\"let repo; columns: displayedColumnsWith;\\\"></mat-row>\\r\\n\\t\\t\\t</mat-table>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</mat-expansion-panel>\\r\\n\\r\\n\\t<mat-expansion-panel>\\r\\n\\t\\t<mat-expansion-panel-header>\\r\\n\\t\\t\\t<mat-panel-title>Repos with out Code.json file</mat-panel-title>\\r\\n\\t\\t\\t<mat-panel-description>\\r\\n\\t\\t\\t\\tCount: {{ReposWithOutCodejson.length}}\\r\\n\\t\\t\\t</mat-panel-description>\\r\\n\\t\\t</mat-expansion-panel-header>\\r\\n\\r\\n\\t\\t<!-- Table of Repos without Code.json file-->\\r\\n\\t\\t<mat-table #withoutCodeTable=\\\"matSort\\\" [dataSource]=\\\"dataSourceWithOutCode\\\" matSort>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"name\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Repo Name</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"created_at\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Created Date</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.created_at | date: 'MM/dd/yyyy'}} </mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"description\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumnsWithOut\\\"></mat-header-row>\\r\\n\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumnsWithOut;\\\"></mat-row>\\r\\n\\t\\t</mat-table>\\r\\n\\r\\n\\t</mat-expansion-panel>\\r\\n\\t<mat-expansion-panel>\\r\\n\\t\\t<mat-expansion-panel-header>\\r\\n\\t\\t\\t<mat-panel-title>Repos with Vulnerabilities</mat-panel-title>\\r\\n\\t\\t\\t<mat-panel-description>\\r\\n\\t\\t\\t\\tCount: {{countWithVuln}}\\r\\n\\t\\t\\t</mat-panel-description>\\r\\n\\t\\t</mat-expansion-panel-header>\\r\\n\\r\\n\\t\\t<div class=\\\"example-header\\\">\\r\\n\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t<input class=\\\"filter\\\" matInput (keyup)=\\\"applyVulnFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- Table of Repos without Code.json file-->\\r\\n\\t\\t<mat-table #vulnTable=\\\"matSort\\\" [dataSource]=\\\"dataSourceVuln\\\" matSort>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"name\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Repo Name</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"vulnerabilityAlerts\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>Number of Vulnerabilities</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.vulnerabilityAlerts}} </mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"vulnerablePackages\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Packages</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> \\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *ngFor=\\\"let pack of element.packages\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{pack.name}}<br>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"affectedRange\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Affected Version(s)</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> \\r\\n\\t\\t\\t\\t\\t<mat-cell *ngFor=\\\"let pack of element.packages\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{pack.affectedRange}}<br>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<ng-container matColumnDef=\\\"fixedIn\\\">\\r\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef>Fixed Version(s)</mat-header-cell>\\r\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> \\r\\n\\t\\t\\t\\t\\t\\t<mat-cell *ngFor=\\\"let pack of element.packages\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{pack.fixedIn}}<br>\\r\\n\\t\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t\\t\\t</mat-cell>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumnsVuln\\\"></mat-header-row>\\r\\n\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumnsVuln;\\\"></mat-row>\\r\\n\\t\\t</mat-table>\\r\\n\\r\\n\\t</mat-expansion-panel>\\r\\n\\r\\n</mat-accordion>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, ViewChild, OnInit, AfterViewChecked, OnDestroy } from '@angular/core';\r\nimport { WIMRepoService } from './services/wimrepo.service';\r\nimport { MatTableDataSource, MatSort } from '@angular/material';\r\nimport { Irepo } from './interfaces/repo.interface';\r\nimport * as jwt from 'express-jwt';\r\n\r\n@Component({\r\n  // tslint:disable:indent\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, AfterViewChecked {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('withCodeTable') withCodeTableSort: MatSort;\r\n  @ViewChild('withoutCodeTable') withoutCodeTableSort: MatSort;\r\n  @ViewChild('vulnTable') vulnTableSort: MatSort;\r\n\r\n  public displayedColumnsWith = ['name', 'created_at', 'description', 'liveurl', 'contact', 'status', 'languages', 'tags'];\r\n  public displayedColumnsWithOut = ['name', 'created_at', 'description'];\r\n  public displayedColumnsVuln = ['name', 'vulnerabilityAlerts', 'vulnerablePackages', 'affectedRange', 'fixedIn'];\r\n\r\n  public ReposWithCodejson: Irepo[];\r\n  public ReposWithOutCodejson: Irepo[];\r\n  public ReposWithVulnerabilities: any;\r\n\r\n  public dataSourceWithCode: MatTableDataSource<Irepo>;\r\n  public dataSourceWithOutCode: MatTableDataSource<Irepo>;\r\n  public dataSourceVuln: MatTableDataSource<any>;\r\n\r\n  public countWithCode = 0;\r\n  public countWithVuln = 0;\r\n\r\n  public userInput;\r\n  public passInput;\r\n  public creds;\r\n\r\n  public isLoggedIn = false;\r\n  public errorMessage = false;\r\n  public subscription;\r\n\r\n  // public sortedData: any;\r\n\r\n  repoDataLoaded = false;\r\n\r\n  constructor(private _wimrepoService: WIMRepoService) {}\r\n\r\n  ngOnInit() {\r\n    this.ReposWithCodejson = [];\r\n    this.ReposWithOutCodejson = [];\r\n    this.ReposWithVulnerabilities = [];\r\n    this.passInput = localStorage.getItem('passInput');\r\n    this.creds = localStorage.getItem('credentials');\r\n\r\n    if (this.creds && this.passInput && !this.checkSetupTime()) {\r\n      this.ReposWithCodejson = [];\r\n      this.ReposWithOutCodejson = [];\r\n      this.ReposWithVulnerabilities = [];\r\n      this.isLoggedIn = true;\r\n      this.getRepos();\r\n    } else {\r\n      this.isLoggedIn = false;\r\n    }\r\n  }\r\n  // end ngOnInit()\r\n\r\n  ngAfterViewChecked() {\r\n    // this.dataSourceWithCode = new MatTableDataSource(this.ReposWithCodejson);\r\n    // this.dataSourceWithCode.sort = this.withCodeTableSort;\r\n    // this.dataSourceWithOutCode = new MatTableDataSource(this.ReposWithOutCodejson);\r\n    // this.dataSourceWithOutCode.sort = this.withoutCodeTableSort;\r\n    // this._cdr.detectChanges(); // fixes ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSourceWithCode.filter = filterValue;\r\n    this.countWithCode = this.dataSourceWithCode.filteredData.length;\r\n\r\n    // this.dataSourceWithCode.data = this.dataSourceWithCode.filteredData\t//trying to get filter to set data\r\n  }\r\n\r\n  public getRepos() {\r\n    this._wimrepoService.getVulnerabilities(this.passInput);\r\n    this._wimrepoService.RepoVuln.subscribe(repoList => {\r\n      this.ReposWithVulnerabilities = repoList;\r\n      this.countWithVuln = Object.keys(repoList).length;\r\n      this.dataSourceVuln = new MatTableDataSource(this.ReposWithVulnerabilities);\r\n      this.dataSourceVuln.sortingDataAccessor = (data, sortHeaderId) => {\r\n        if (typeof data[sortHeaderId] === 'string') {\r\n          return data[sortHeaderId].toLocaleLowerCase();\r\n        } else {\r\n          return data[sortHeaderId];\r\n        }\r\n      };\r\n      this.dataSourceVuln.sort = this.vulnTableSort;\r\n      this.dataSourceVuln.filterPredicate = (data, filter: string) => {\r\n        const accumulator = (currentTerm, key) => {\r\n          return this.nestedFilterCheck(currentTerm, data, key);\r\n        };\r\n        const dataStr = Object.keys(data)\r\n          .reduce(accumulator, '')\r\n          .toLowerCase();\r\n        // Transform the filter by converting it to lowercase and removing whitespace.\r\n        const transformedFilter = filter.trim().toLowerCase();\r\n        return dataStr.indexOf(transformedFilter) !== -1;\r\n      };\r\n    });\r\n    this._wimrepoService.getRepos(this.creds);\r\n    this.ReposWithCodejson = [];\r\n    this.ReposWithOutCodejson = [];\r\n\r\n    this._wimrepoService.RepoList.subscribe((repos: Array<Irepo>) => {\r\n      let index = 0;\r\n      repos.forEach(repo => {\r\n        index++;\r\n        this._wimrepoService.getRepoCodejson(repo.name, this.creds).subscribe(\r\n          code => {\r\n            const decodedContent = atob(code.content);\r\n            const jsonContent = JSON.parse(decodedContent);\r\n            repo.status = jsonContent[0].status;\r\n            repo.contact = jsonContent[0].contact.name;\r\n            repo.liveurl = jsonContent[0].homepageURL;\r\n            repo.languages = jsonContent[0].languages;\r\n            repo.tags = jsonContent[0].tags;\r\n            this.ReposWithCodejson.push(repo);\r\n\r\n            // BAD 4/19/18: moved these up here to ensure they are being set after all data is in and set\r\n            this.dataSourceWithCode = new MatTableDataSource(this.ReposWithCodejson);\r\n            this.dataSourceWithCode.sortingDataAccessor = (data, sortHeaderId) => {\r\n              if (typeof data[sortHeaderId] === 'string') {\r\n                return data[sortHeaderId].toLocaleLowerCase();\r\n              } else {\r\n                return data[sortHeaderId];\r\n              }\r\n            };\r\n            this.dataSourceWithCode.sort = this.withCodeTableSort;\r\n            this.countWithCode = this.ReposWithCodejson.length;\r\n          }, error => {\r\n            this.ReposWithOutCodejson.push(repo);\r\n            this.dataSourceWithOutCode = new MatTableDataSource(this.ReposWithOutCodejson);\r\n            this.dataSourceWithOutCode.sortingDataAccessor = (data, sortHeaderId) => {\r\n              if (typeof data[sortHeaderId] === 'string') {\r\n                return data[sortHeaderId].toLocaleLowerCase();\r\n              } else {\r\n                return data[sortHeaderId];\r\n              }\r\n            };\r\n            this.dataSourceWithOutCode.sort = this.withoutCodeTableSort;\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  public login() {\r\n    this.userInput = (<HTMLInputElement>document.getElementById('userInput')).value;\r\n    this.passInput = (<HTMLInputElement>document.getElementById('passInput')).value;\r\n\r\n    this.creds = 'Basic ' + btoa(this.userInput + ':' + this.passInput);\r\n    this.passInput = btoa(this.passInput);\r\n    localStorage.setItem('loggedInUser', this.userInput);\r\n    this.setStorageExpiration();\r\n\r\n    if (this.userInput && this.passInput) {\r\n      this.ReposWithCodejson = [];\r\n      this.ReposWithOutCodejson = [];\r\n      this.ReposWithVulnerabilities = [];\r\n      this.getRepos();\r\n    } else {\r\n      this.isLoggedIn = false;\r\n    }\r\n\r\n    this._wimrepoService.ErrorMsgObs.subscribe((errMsg: string) => {\r\n      if (errMsg.includes('401')) {\r\n        this.isLoggedIn = false;\r\n        this.errorMessage = true;\r\n      } else {\r\n        this.isLoggedIn = true;\r\n        this.errorMessage = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public logout() {\r\n    this.isLoggedIn = false;\r\n    this.ReposWithCodejson = [];\r\n    this.ReposWithOutCodejson = [];\r\n    this.ReposWithVulnerabilities = [];\r\n    localStorage.clear();\r\n    location.reload();\r\n  }\r\n\r\n  public applyVulnFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSourceVuln.filter = filterValue;\r\n    this.countWithVuln = this.dataSourceVuln.filteredData.length;\r\n\r\n    // this.dataSourceWithCode.data = this.dataSourceWithCode.filteredDat\r\n  }\r\n  public nestedFilterCheck(search, data, key) {\r\n    if (typeof data[key] === 'object') {\r\n      for (const k in data[key]) {\r\n        if (data[key][k] !== null) {\r\n          search = this.nestedFilterCheck(search, data[key], k);\r\n        }\r\n      }\r\n    } else {\r\n      search += data[key];\r\n    }\r\n    return search;\r\n  }\r\n\r\n  private setStorageExpiration(): void {\r\n    const hours = 12; // Reset when storage is more than 12 hours\r\n    const now: number = new Date().getTime();\r\n    const setupTime: number = Number(localStorage.getItem('setupTime'));\r\n    localStorage.setItem('setupTime', now.toString());\r\n  }\r\n\r\n  private checkSetupTime(): boolean {\r\n    let tooOld = false;\r\n\r\n    const twentyFourHours: number = 12 * 60 * 60 * 1000;\r\n    const now: number = new Date().getTime();\r\n    const setupTime: number = Number(localStorage.getItem('setupTime'));\r\n    if (now - setupTime > twentyFourHours) {\r\n      // is it greater than 12 hours\r\n      tooOld = true;\r\n      localStorage.clear();\r\n    }\r\n\r\n    return tooOld;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { WIMRepoService } from './services/wimrepo.service';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { MatTableModule} from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material';\r\nimport { MatFormFieldModule } from '@angular/material';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [ AppComponent ],\r\n  imports: [ BrowserModule, BrowserAnimationsModule, HttpModule, MatInputModule, MatTableModule, MatSortModule, MatFormFieldModule,\r\n    MatExpansionModule ],\r\n  providers: [ WIMRepoService ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\n\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// ------------------------------------------------------------------------------\r\n// ------------ config ----------------------------------------------------------\r\n// ------------------------------------------------------------------------------\r\n// copyright:   2017 WiM - USGS              \r\n// purpose:     Configuration file for all the urls\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Headers } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class CONFIG {\r\n    private static baseURL: string = \"https://api.github.com/\";\r\n    private static ORG: string = \"USGS-WiM\";\r\n\r\n    public static get GETREPOS1_URL(): string { return this.baseURL + \"orgs/\" + this.ORG + \"/repos?page=1&per_page=100\"; };\r\n    public static get GETREPOS2_URL(): string { return this.baseURL + \"orgs/\" + this.ORG + \"/repos?page=2&per_page=100\"; };\r\n\r\n    public static get GETREPO_CODE_URL(): string { return this.baseURL + \"repos/\" + this.ORG + \"/\" }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/config.ts","// ------------------------------------------------------------------------------\r\n// ------------ wimrepo.service.service --------------------------------------------\r\n// ------------------------------------------------------------------------------\r\n// copyright:   2018 WiM - USGS\r\n// purpose:     Service for retrieving github api endpoints (repos and each repo's code.json file)\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, URLSearchParams, Headers } from '@angular/http';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { CONFIG } from './config';\r\nimport { Irepo } from '../interfaces/repo.interface';\r\nimport { Icodejson } from '../interfaces/code.interface';\r\nimport { GraphQLClient } from 'graphql-request';\r\n// import  * as fetch  from 'isomorphic-fetch';\r\n\r\n\r\n@Injectable()\r\nexport class WIMRepoService {\r\n    private repoList1: Array<Irepo>;\r\n    private repoList2: Array<Irepo>;\r\n    private reposWithVulnerabilities = [];\r\n    private repoNames: any;\r\n\r\n    constructor(private _http: Http) { }\r\n\r\n    private _repoListSubject: Subject<Array<Irepo>> = new Subject<Array<Irepo>>();\r\n    // getter: subscribed to from app.component.ts (sends every time the _repoListSubject gets updated -\r\n    // which is only once upon initial load)\r\n\r\n    public get RepoList(): Observable<Array<Irepo>> {\r\n        return this._repoListSubject.asObservable();\r\n    }\r\n\r\n    private _repoVulnSubject: Subject<Object> = new Subject<Object>();\r\n    // getter: subscribed to from app.component.ts (sends every time the _repoListSubject gets updated -\r\n    // which is only once upon initial load)\r\n\r\n    public get RepoVuln(): Observable<Object> {\r\n        return this._repoVulnSubject.asObservable();\r\n    }\r\n\r\n    public _errorMsgSubject: Subject<string> = new Subject<string>();\r\n    public get ErrorMsgObs(): Observable<string> {\r\n        return this._errorMsgSubject.asObservable();\r\n    }\r\n\r\n    // get all the repos (called from constructor)\r\n    public getRepos(creds) {\r\n        const JSON_HEADERS = new Headers({ 'Accept': 'application/json', 'Authorization': creds });\r\n        const options = new RequestOptions({ headers: JSON_HEADERS });\r\n        // need to request the repos in 2 separate calls due to limits on # of repos returned. using '?page=1&per_page=100'\r\n        this._http.get(CONFIG.GETREPOS1_URL, options)\r\n            .map(res => <Array<Irepo>>res.json())\r\n            .catch((err, caught) => this.handleError(err, caught))\r\n            .subscribe(p => {\r\n                this.repoList1 = p;\r\n                // need both pages to be added together\r\n                if (this.repoList2) {\r\n                    this.repoList1.push.apply(this.repoList1, this.repoList2);\r\n                    this._repoListSubject.next(this.repoList1);\r\n                }\r\n            });\r\n        // need to request the repos in 2 separate calls due to limits on # of repos returned. using '?page=2&per_page=100'\r\n        this._http.get(CONFIG.GETREPOS2_URL, options)\r\n            .map(res => <Array<Irepo>>res.json())\r\n            .catch((err, caught) => this.handleError(err, caught))\r\n            .subscribe(p => {\r\n                this.repoList2 = p;\r\n                // need both pages to be added together\r\n                if (this.repoList1) {\r\n                    this.repoList2.push.apply(this.repoList2, this.repoList1);\r\n                    this._repoListSubject.next(this.repoList2);\r\n                }\r\n            })\r\n            .add(() => console.log('unsub'));\r\n    }\r\n\r\n    // get each repo's code.json file (called from the app.component.ts subscription to RepoList() )\r\n    public getRepoCodejson(repoName, creds): Observable<Icodejson> {\r\n        const JSON_HEADERS = new Headers({ 'Accept': 'application/json', 'Authorization': creds });\r\n        const options = new RequestOptions({ headers: JSON_HEADERS });\r\n        return this._http.get(CONFIG.GETREPO_CODE_URL + repoName + '/contents/code.json', options)\r\n            .map((response: Response) => {\r\n                if (response) {localStorage.setItem('credentials', creds); }\r\n                return <Icodejson>response.json();\r\n            })\r\n            .catch((err, caught) => this.handleError(err, caught));\r\n    }\r\n\r\n    // Error Handler\r\n    private handleError(error: any, caught: any) {\r\n        const errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.log(errMsg);\r\n        this._errorMsgSubject.next(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n    public async getVulnerabilities(pass) {\r\n        this.reposWithVulnerabilities = [];\r\n        const client = new GraphQLClient('https://api.github.com/graphql', {\r\n            headers: {\r\n                Accept: 'application/vnd.github.vixen-preview+json',\r\n                Authorization: 'Bearer ' + atob(pass),\r\n            },\r\n        });\r\n        const query1 = `{organization(login:\"USGS-WiM\") {\r\n                id\r\n                name\r\n                repositories(first:100) {\r\n                    nodes {\r\n                        id\r\n                        name\r\n                        vulnerabilityAlerts(first:20) {\r\n                            nodes {\r\n                                id\r\n\t\t\t\t\t\t\t\tpackageName\r\n\t\t\t\t\t\t\t\taffectedRange\r\n\t\t\t\t\t\t\t\tfixedIn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttotalCount\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\t\t}`;\r\n        const query2 = `{organization(login:\"USGS-WiM\") {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\trepositories(last:50) {\r\n\t\t\t\t\tnodes {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tvulnerabilityAlerts(first:20) {\r\n\t\t\t\t\t\t\tnodes {\r\n\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\tpackageName\r\n\t\t\t\t\t\t\t\taffectedRange\r\n\t\t\t\t\t\t\t\tfixedIn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttotalCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }`;\r\n        this.repoNames = [];\r\n        const vulnReturn = await client.request(query1);\r\n        this.getVulnData(vulnReturn);\r\n        const vulnReturn2 = await client.request(query2);\r\n        this.getVulnData(vulnReturn2);\r\n        localStorage.setItem('passInput', pass);\r\n        this._repoVulnSubject.next(this.reposWithVulnerabilities);\r\n    }\r\n\r\n    public getVulnData(data) {\r\n        const nodes = data['organization']['repositories']['nodes'];\r\n        let vulnAlerts;\r\n        for (const node in nodes) {\r\n            if (this) {\r\n                vulnAlerts = nodes[node].vulnerabilityAlerts.totalCount;\r\n                if (vulnAlerts > 0 && !(this.repoNames.indexOf(nodes[node].name) !== -1)) {\r\n                    const newVulnRepo = { name: '', vulnerabilityAlerts: 0, packages: [] };\r\n                    newVulnRepo.name = nodes[node].name;\r\n                    this.repoNames.push(nodes[node].name);\r\n                    newVulnRepo.vulnerabilityAlerts = vulnAlerts;\r\n                    let i = 0;\r\n                    for (const pkg in nodes[node].vulnerabilityAlerts.nodes) {\r\n                        if (pkg) {\r\n                            const pack = {name: '', affectedRange: '', fixedIn: ''};\r\n                            if (nodes[node].vulnerabilityAlerts.nodes[pkg].packageName) {\r\n                                pack.name = nodes[node].vulnerabilityAlerts.nodes[pkg].packageName;\r\n                            }\r\n                            if (nodes[node].vulnerabilityAlerts.nodes[pkg].affectedRange) {\r\n                                pack.affectedRange = nodes[node].vulnerabilityAlerts.nodes[pkg].affectedRange;\r\n                            }\r\n                            if (nodes[node].vulnerabilityAlerts.nodes[pkg].fixedIn) {\r\n                                pack.fixedIn = nodes[node].vulnerabilityAlerts.nodes[pkg].fixedIn;\r\n                            }\r\n                            if (!this.containsObject(pack, newVulnRepo.packages)) {\r\n                                newVulnRepo.packages.push(pack);\r\n                            }\r\n                            i++;\r\n                        }\r\n                    }\r\n                    this.reposWithVulnerabilities.push(newVulnRepo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public containsObject(obj, list) {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].packageName === obj.packageName && list[i].affectedRange === obj.affectedRange && list[i].fixedIn === obj.fixedIn) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/wimrepo.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}